#!/bin/bash
# Trendit Render Deployment Script
# This script prepares and deploys the Trendit API to Render.com

echo "🚀 Trendit Render Deployment Script"
echo "==================================="

# Ensure we're in the project root
if [[ ! -f "render.yaml" ]] || [[ ! -d "backend" ]]; then
    echo "❌ Please run this script from the Trendit project root directory"
    exit 1
fi

echo "✅ Project root confirmed: $(pwd)"

# Check if git is initialized and clean
if [[ ! -d ".git" ]]; then
    echo "⚠️  Git repository not initialized. Initializing..."
    git init
    git add .
    git commit -m "Initial commit for Render deployment"
fi

# Check for uncommitted changes
if ! git diff --quiet || ! git diff --cached --quiet; then
    echo "⚠️  You have uncommitted changes. Committing them..."
    git add .
    git commit -m "Prepare for Render deployment - $(date)"
fi

echo "📦 Current git status:"
git status --short

# Check if backend requirements.txt exists
if [[ ! -f "backend/requirements.txt" ]]; then
    echo "❌ backend/requirements.txt not found!"
    echo "Creating requirements.txt with common dependencies..."
    
    cat > backend/requirements.txt << 'EOF'
fastapi==0.104.1
uvicorn[standard]==0.24.0
sqlalchemy==2.0.23
psycopg2-binary==2.9.9
alembic==1.12.1
pydantic==2.5.0
python-jose[cryptography]==3.3.0
passlib[bcrypt]==1.7.4
python-multipart==0.0.6
python-dotenv==1.0.0
praw==7.7.1
asyncpraw==7.7.1
httpx==0.25.2
numpy==1.24.3
pandas==2.0.3
textstat==0.7.3
nltk==3.8.1
requests==2.31.0
aiofiles==23.2.1
EOF
    
    git add backend/requirements.txt
    git commit -m "Add requirements.txt for Render deployment"
fi

# Create .renderignore if it doesn't exist
if [[ ! -f ".renderignore" ]]; then
    echo "📝 Creating .renderignore file..."
    cat > .renderignore << 'EOF'
# Virtual environments
backend/venv/
venv/
env/
.env.local
.env

# Development files
*.log
__pycache__/
*.pyc
*.pyo
*.pyd
.Python
*.so
.coverage
.pytest_cache/
.mypy_cache/

# Database files
*.db
*.sqlite
*.sqlite3

# Documentation (keep essential ones)
docs/
wiki/
*.md
!README.md

# IDE files
.vscode/
.idea/
*.swp
*.swo

# Development scripts
run_*.sh
install_deps.sh
setup_dev_env.sh
test_*.py

# Temporary files
.DS_Store
Thumbs.db
*.tmp
*.temp

# Node modules
node_modules/
package-lock.json
yarn.lock
EOF
    
    git add .renderignore
    git commit -m "Add .renderignore file"
fi

# Display environment variables that need to be set
echo ""
echo "🔧 Environment Variables Setup"
echo "=============================="
echo "You need to set these environment variables in Render:"
echo ""
echo "🔴 REQUIRED (set these as secret environment variables):"
echo "  DATABASE_URL - Will be auto-generated by Render PostgreSQL service"
echo "  REDDIT_CLIENT_ID - Get from https://www.reddit.com/prefs/apps"
echo "  REDDIT_CLIENT_SECRET - Get from https://www.reddit.com/prefs/apps" 
echo "  JWT_SECRET_KEY - Generate with: openssl rand -hex 32"
echo "  API_KEY_SALT - Generate with: openssl rand -hex 16"
echo ""
echo "🟡 OPTIONAL (for billing features):"
echo "  PADDLE_API_KEY"
echo "  PADDLE_WEBHOOK_SECRET" 
echo "  PADDLE_CLIENT_TOKEN"
echo "  PADDLE_PRO_PRICE_ID"
echo "  PADDLE_ENTERPRISE_PRICE_ID"
echo ""
echo "🟢 OPTIONAL (for AI sentiment analysis):"
echo "  OPENROUTER_API_KEY"
echo ""

# Generate some required secrets
echo "🔑 Generating secrets for you:"
JWT_SECRET=$(openssl rand -hex 32 2>/dev/null || python3 -c "import secrets; print(secrets.token_hex(32))")
API_SALT=$(openssl rand -hex 16 2>/dev/null || python3 -c "import secrets; print(secrets.token_hex(16))")

echo "  JWT_SECRET_KEY=$JWT_SECRET"
echo "  API_KEY_SALT=$API_SALT"
echo ""

# Check if we have a remote repository
REMOTE_URL=$(git config --get remote.origin.url 2>/dev/null || echo "")

if [[ -z "$REMOTE_URL" ]]; then
    echo "⚠️  No git remote found. You'll need to:"
    echo "  1. Create a new repository on GitHub"
    echo "  2. Add it as remote: git remote add origin <your-repo-url>"
    echo "  3. Push your code: git push -u origin main"
    echo "  4. Connect that repository to Render"
    echo ""
    read -p "Enter your GitHub repository URL (https://github.com/username/repo.git): " repo_url
    
    if [[ -n "$repo_url" ]]; then
        git remote add origin "$repo_url"
        echo "✅ Added remote origin: $repo_url"
    fi
fi

# Push to remote
echo "📤 Pushing to remote repository..."
if git remote get-url origin >/dev/null 2>&1; then
    # Check current branch
    CURRENT_BRANCH=$(git branch --show-current)
    if [[ -z "$CURRENT_BRANCH" ]]; then
        CURRENT_BRANCH="main"
        git checkout -b main 2>/dev/null || git branch -M main
    fi
    
    git push -u origin "$CURRENT_BRANCH"
    
    if [[ $? -eq 0 ]]; then
        echo "✅ Code pushed to remote repository successfully!"
    else
        echo "❌ Failed to push to remote. Please check your git setup."
        exit 1
    fi
else
    echo "❌ No remote repository configured. Please set one up first."
    exit 1
fi

# Instructions for Render deployment
echo ""
echo "🌟 Next Steps - Deploy to Render"
echo "================================"
echo ""
echo "1. 🌐 Go to https://render.com and sign up/login"
echo ""
echo "2. 📁 Create New → Web Service"
echo "   - Connect your GitHub repository"
echo "   - Select branch: $CURRENT_BRANCH"
echo ""
echo "3. ⚙️  Service Configuration:"
echo "   - Name: trendit-api"
echo "   - Environment: Python 3"
echo "   - Region: Oregon (US West)"
echo "   - Branch: $CURRENT_BRANCH"
echo "   - Build Command: cd backend && pip install -r requirements.txt"
echo "   - Start Command: cd backend && uvicorn main:app --host 0.0.0.0 --port \$PORT"
echo ""
echo "4. 💾 Add Environment Variables (in Render dashboard):"
echo "   Copy these secrets (keep them safe!):"
echo "   JWT_SECRET_KEY=$JWT_SECRET"
echo "   API_KEY_SALT=$API_SALT"
echo ""
echo "   Get these from Reddit API:"
echo "   REDDIT_CLIENT_ID=your_reddit_client_id"
echo "   REDDIT_CLIENT_SECRET=your_reddit_client_secret"
echo ""
echo "5. 🗄️  Add PostgreSQL Database:"
echo "   - Create New → PostgreSQL"
echo "   - Name: trendit-postgres"  
echo "   - Copy the DATABASE_URL and add it to your web service environment variables"
echo ""
echo "6. 🚀 Deploy!"
echo "   - Click 'Create Web Service'"
echo "   - Wait for deployment to complete"
echo "   - Your API will be available at: https://trendit-api.onrender.com"
echo ""
echo "7. 🧪 Test your deployment:"
echo "   curl https://trendit-api.onrender.com/health"
echo ""
echo "📖 Alternative: Use render.yaml (Infrastructure as Code)"
echo "You can also deploy using the render.yaml file:"
echo "   - In Render dashboard, go to 'Blueprint'"
echo "   - Connect your repo and select render.yaml"
echo "   - This will create both the web service and database automatically"
echo ""
echo "🎉 Your Trendit API will be production-ready on Render!"
echo ""
echo "📚 Update your frontend API_BASE_URL to: https://trendit-api.onrender.com"